# See deployment-mapping-tester for the latest version of this file.

name: Ansible Deployment
on:
  workflow_dispatch: {}
  push: {}
env:
  ANSIBLE_REPO: epimorphics/hmlr-ansible-deployment
  ANSIBLE_REPO_REF: master
  ANSIBLE_TAG: ppd
  ANSIBLE_VAULT_PASSWORD: "${{ secrets.HMLR_ANSIBLE_VAULT_PASSWORD }}"
  AWS_ACCESS_KEY_ID: "${{ secrets.BUILD_HMLR_AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.BUILD_HMLR_AWS_SECRET_ACCESS_KEY }}"
  AWS_REGION: "eu-west-1"
  HOST_PREFIX: "hmlr"
  SSH_KEY: "${{ secrets.HMLR_SSH_KEY }}"

#---- Below this line should not require editing ----
jobs:
  publish:
    name: "Publish: ECR Image Upload"
    runs-on: ubuntu-20.04
    outputs:
      deploy: ${{ steps.mapper.outputs.deploy }}
      tag: ${{ steps.gettag.outputs.tag }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Check for mapped deployment"
        id: mapper
        uses: epimorphics/github-actions/mapper@v3
        with:
          ref: "${{github.ref}}"

      - name: "Get image tag"
        id: gettag
        uses: epimorphics/github-actions/generate-tag@v4

      - name: "Create image"
        if: steps.mapper.outputs.image != ''
        env:
          REPO: ${{ steps.mapper.outputs.image }}
        shell: bash
        run: |
          PAT=${{ secrets.EPI_GPR_ACCESS_TOKEN }} make image

      - name: Configure AWS Credentials
        if: steps.mapper.outputs.publish != ''
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "${{ env.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ env.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "${{ env.AWS_REGION }}"

      - name: "Login to Amazon ECR"
        if: steps.mapper.outputs.publish != ''
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: "Create ECR"
        if: steps.mapper.outputs.publish != ''
        uses: epimorphics/github-actions/create-ecr-action@v3
        with:
          image: ${{ steps.mapper.outputs.image }}/${{ steps.mapper.outputs.publish }}

      - name: "Publish image"
        if: ( steps.mapper.outputs.publish != '' && steps.gettag.outputs.tag != '' )
        env:
          IMAGE: ${{ steps.mapper.outputs.image }}/${{ steps.mapper.outputs.publish }}
          TAG: ${{ steps.gettag.outputs.tag }}
        shell: bash
        run: |
          make publish


  deploy:
    needs: publish
    name: "Deploy: Ansible"
    runs-on: ubuntu-20.04
    if: needs.publish.outputs.deploy != ''
    steps:
      - name: "SSH Setup: github -> aws"
        uses: shimataro/ssh-key-action@v2
        with:
          key: "${{ env.SSH_KEY }}"
          known_hosts: unnesessary

      - name: "Install Ansible"
        uses: epimorphics/github-actions/ansible@v2
        with:
          aws-access-key-id: "${{ env.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ env.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "${{ env.AWS_REGION }}"
          host-prefix: "${{ env.HOST_PREFIX}}"

      - name: "Ansible Deployment Repository Checkout"
        id: deploy
        uses: actions/checkout@v2
        with:
          repository: "${{ env.ANSIBLE_REPO }}"
          ref: "${{ env.ANSIBLE_REPO_REF }}"
          token: "${{ secrets.GIT_REPOSITORY_FULL_ACCESS_PAT }}"

      - name: "Ansible Deploy"
        if: ( needs.publish.outputs.tag != '' && needs.publish.outputs.deploy != '' )
        uses: epimorphics/github-actions/ansible-deploy-image@v2
        with:
          secret: "${{ env.ANSIBLE_VAULT_PASSWORD }}"
          stage: "${{ needs.publish.outputs.deploy }}"
          name: "${{ env.ANSIBLE_TAG }}"
          version: "${{ needs.publish.outputs.tag }}"

      - name: "Git Commit"
        if: needs.publish.outputs.tag != ''
        shell: bash
        run: |
          if ! git diff --quiet
          then
            git config --global user.name "Github CICD"
            git config --global user.email "noreply@epimorphics.com"
            git commit -am "Github/CICD: ${{ env.ANSIBLE_TAG }}:${{ needs.publish.outputs.tag }}"
            git push
          else
            echo "No changes to commit"
            echo "tag: ${{ needs.publish.outputs.tag }}"
          fi
