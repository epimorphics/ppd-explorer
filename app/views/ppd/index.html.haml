-# frozen_string_literal: true

= render partial: "search_action_buttons"

.row
  %h1.col-md-12
    Search the price paid dataset:
  %p.col-md-12
    Enter one or more search terms to locate the property transactions
    you are interested in.

.row
  .col-md-12
    =form_tag( {controller: :search, action: :create}, {role: "form", class: "ppd form form-horizontal"} ) do
      .form-group
        %label.col-sm-4.control-label{ for: "paon" } Building name or number
        .col-sm-8
          %input#paon.form-control{ type: "text", autocomplete: "on", name: "paon", value: @preferences.param( :paon ), placeholder: "For example: Rose Cottage or 17" }

      .form-group
        %label.col-sm-4.control-label{ for: "street" } Street
        .col-sm-8
          %input#street.form-control{ type: "text", autocomplete: "street-address", name: "street", value: @preferences.param( :street ), placeholder: "Use the full name, or just part of it e.g: Harbour Road or Colston" }

      .form-group
        %label.col-sm-4.control-label{ for: "town" } Town or city
        .col-sm-8
          %input#town.form-control{ type: "text", autocomplete: "address-level2", name: "town", value: @preferences.param( :town ), placeholder: "For example: Plymouth" }

      .form-group
        %label.col-sm-4.control-label{ for: "district" } District
        .col-sm-8
          %input#district.form-control{ type: "text", autocomplete: "address-level3", name: "district", value: @preferences.param( :district ), placeholder: "For example: City of Westminster" }

      .form-group
        %label.col-sm-4.control-label{ for: "county" } County
        .col-sm-8
          %input#county.form-control{ type: "text", autocomplete: "county", name: "county", value: @preferences.param( :county ), placeholder: "For example: Devon" }

      .form-group
        %label.col-sm-4.control-label{ for: "locality" } Locality
        .col-sm-8
          %input#locality.form-control{ type: "text", autocomplete: "on", name: "locality", value: @preferences.param( :locality ), placeholder: "For example: Thurloxton" }

      .form-group
        %label.col-sm-4.control-label{ for: "postcode" } Postcode
        .col-sm-8
          %input#postcode.form-control{ type: "text", autocomplete: "postal-code", name: "postcode", value: @preferences.param( :postcode ), placeholder: "Use a full postcode, or just the first group e.g. PL6 5WS or PL6." }

      %fieldset.form-group
        %legend.control-legend.col-sm-4.control-label{ for: "ptype" } Property type
        .col-sm-8
          %ul.list-inline
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "ptype[]", value: "lrcommon:detached", checked: @preferences.display_checked?( :ptype, "lrcommon:detached") }
                  detached
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "ptype[]", value: "lrcommon:semi-detached", checked: @preferences.display_checked?( :ptype, "lrcommon:semi-detached") }
                  semi-detached
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "ptype[]", value: "lrcommon:terraced", checked: @preferences.display_checked?( :ptype, "lrcommon:terraced") }
                  terraced
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "ptype[]", value: "lrcommon:flat-maisonette", checked: @preferences.display_checked?( :ptype, "lrcommon:flat-maisonette") }
                  flat/maisonette
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "ptype[]", value: "lrcommon:otherPropertyType", checked: @preferences.display_checked?( :ptype, "lrcommon:otherPropertyType") }
                  other

      %fieldset.form-group
        %legend.control-legend.col-sm-4.control-label{ for: "nb" } New build?
        .col-sm-8
          %ul.list-inline
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "nb[]", value: "true", checked: @preferences.display_checked?( :nb, "true" ) }
                  new-build
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "nb[]", value: "false", checked: @preferences.display_checked?( :nb, "false" ) }
                  not new-build

      %fieldset.form-group
        %legend.control-legend.col-sm-4.control-label{ for: "et" } Estate type
        .col-sm-8
          %ul.list-inline
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "et[]", value: "lrcommon:freehold", checked: @preferences.display_checked?( :et, "lrcommon:freehold" ) }
                  freehold
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "et[]", value: "lrcommon:leasehold", checked: @preferences.display_checked?( :et, "lrcommon:leasehold" ) }
                  leasehold

      %fieldset.form-group
        %legend.control-legend.col-sm-4.control-label{ for: "tc" } Transaction category
        .col-sm-8
          %ul.list-inline
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "tc[]", value: "ppd:standardPricePaidTransaction", checked: @preferences.display_checked?( :tc, "ppd:standardPricePaidTransaction" ) }
                  standard
            %li
              .checkbox
                %label
                  %input{ type: "checkbox", name: "tc[]", value: "ppd:additionalPricePaidTransaction", checked: @preferences.display_checked?( :tc, "ppd:additionalPricePaidTransaction" ) }
                  additional

      .form-group
        %label.col-sm-4.control-label{ for: "min_price" } Minimum price
        .col-sm-8
          .row
            .col-sm-4
              .input-group
                %span.input-group-addon
                  &pound;
                %input#min_price.form-control{ type: "text", name: :min_price, value: @preferences.param( :min_price ) }
            .col-sm-8.hidden.validation-warning
              %p.bg-warning
                Please enter a valid numerical value, or leave blank
      .form-group
        %label.col-sm-4.control-label{ for: "max_price" } Maximum price
        .col-sm-8
          .row
            .col-sm-4
              .input-group
                %span.input-group-addon
                  &pound;
                %input#max_price.form-control{ type: "text", name: :max_price, value: @preferences.param( :max_price ) }
            .col-sm-8.hidden.validation-warning
              %p.bg-warning
                Please enter a valid numerical value, or leave blank

      .form-group
        %label.col-sm-4.control-label.control-label-adjust Date
        .col-sm-8
          %ul.list-inline
            %li
              %div
                %label
                  earliest:
                  %input{ type: 'date', name: :min_date, value: @preferences.param( :min_date ), min: "1995-01-01", max: Date.today.iso8601 }
            %li
              %div
                %label
                  latest:
                  %input{ type: 'date', name: :max_date, value: @preferences.param( :max_date ), min: "1995-01-01", max: Date.today.iso8601 }

      %fieldset.form-group
        %legend.control-legend.col-sm-4.control-label{ for: "limit" } How many results?
        .col-sm-8
          %ul.list-inline
            %li
              .radio
                %label
                  %input{ type: "radio", name: :limit, value: "100", checked: @preferences.selected_limit == "100" }
                  at most 100
            %li
              .radio
                %label
                  %input{ type: "radio", name: :limit, value: "1000", checked: @preferences.selected_limit == "1000" }
                  at most 1000
            %li
              .radio
                %label
                  %input{ type: "radio", name: :limit, value: "all", checked: @preferences.selected_limit == "all" }
                  all
= render partial: "search_action_buttons"

= render partial: "bookmark_modal"
= render partial: "help_modal"
